declare const systems: string[];
type MetacriticSystem = typeof systems[number];
type searchResult = {
    url: string;
    name: string;
    itemDate: string | null;
    imagePath: string | null;
    metaScore: string | null;
    scoreWord: string;
    refType: string;
    refTypeId: number;
};
interface MetacriticOutput {
    name: string;
    metacritic_score: number | 'TBD';
    user_score: number | 'TBD';
    rating: string;
    genres: string[];
    developers: string[];
    publisher: string[];
    release_date: string;
    also_on: string[];
    also_on_url: Array<string | undefined>;
    image_url: string | undefined;
    cheat_url: string | undefined;
}
declare function metacriticAPI(system: MetacriticSystem): {
    loadMetacriticPage: (game_name: string) => Promise<string>;
    getMetacriticScores: () => MetacriticOutput;
    searchMetacritic: (query: string) => Promise<searchResult[]>;
    getSystem: () => string;
    setSystem: (new_system: MetacriticSystem) => string;
};
export default metacriticAPI;
//# sourceMappingURL=index.d.ts.map